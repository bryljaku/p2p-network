//created by Piotr
#ifndef P2P_NETWORK_TORRENT_H
#define P2P_NETWORK_TORRENT_H


#include <cstdio>
#include <cstdint>
#include <string>
#include <TcpMessage.pb.h>
#include <utility>
#include <sys/stat.h>
#include <fstream>
#include "GeneralTypes.h"

class Torrent {
public:
	Hash hashed;		// hash generated by a tracker
	uint32_t size;			// 32 bits = ~4GB max file size
	std::string fileName;
	bool isSeed = false;
	bool hasPath = false;
	std::string currentPath = "";	// linking to path on disk (used only locally)

	Torrent();
	explicit Torrent(std::string torrentFilename);
	Torrent(const Torrent &obj);
	Torrent(uint32_t size, std::string fileName);
	Torrent(Hash hashed, uint32_t size, std::string fileName);
	explicit Torrent(const TorrentMessage &msg);
	TorrentMessage* toMsg();

	void genDefaultHash();
	void genSaltedHash(uint32_t salt);

	void setPath(std::string currentPath);
	void saveToFile(std::string torrentFilename);

	bool operator==(const Torrent& other);
};


#endif //P2P_NETWORK_TORRENT_H
